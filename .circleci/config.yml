# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
# Just testing to see if this triggers a build
version: 2
defaults: &defaults
    docker:
      # specify the version you desire here
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/node:10.8.0
      - image: redis
        environment:
          REDIS_PORT: 6379
          REDIS_HOST: 127.0.0.1

    working_directory: ~/repo
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
            name: Install dependencies
            command: yarn install
      - run: 
          name: "Setup custom environment variables"
          command: |
            echo 'export FETCH_FAIL_AUTOMATION_COUNT=10' >> $BASH_ENV # Redirect MY_ENV_VAR into $BASH_ENV
      # Run a step to print what branch our code base is on.
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - attach_workspace:
          at: ~/repo/tmp
      - run:
          name: Install code coverage dependencies
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Run tests and upload coverage
          command: |
            ./cc-test-reporter before-build
            yarn test
            ./cc-test-reporter after-build --coverage-input-type lcov --exit-code $?
      - store_artifacts:
          path: coverage
          prefix: coverage
  deploy_staging: # Deploy application to GCP staging
    docker:
      - image: circleci/node:10.15.0
        environment:
          GOOGLE_PROJECT_ID: bench-projects
          GOOGLE_COMPUTE_ZONE: us-central1-a
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build and deploy application to staging
          command: chmod +x scripts/deploy.sh && scripts/deploy.sh

workflows:
  version: 2
  build_deploy:
    jobs:
      - build
      - deploy_staging:
          requires:
            - build
          filters:
            branches:
              only:
                - develop